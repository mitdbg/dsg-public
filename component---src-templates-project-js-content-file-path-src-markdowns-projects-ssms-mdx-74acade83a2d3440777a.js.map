{"version":3,"file":"component---src-templates-project-js-content-file-path-src-markdowns-projects-ssms-mdx-74acade83a2d3440777a.js","mappings":"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","sources":["webpack:///./src/markdowns/projects/ssms.mdx","webpack:///./src/templates/project.js","webpack:///./src/components/bibtex.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Bibtex from '../../components/bibtex.js';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Serverless State Management Systems\"), \"\\n\", React.createElement(_components.p, null, \"Modern cloud developers face many distributed systems complexities when building\\ndisaggregated applications from cloud building blocks. We propose a new class of\\ncloud services, called Serverless State Management Systems (SSMS), that abstracts away\\nthese complexities and transparently manages fault-tolerance, deployment, and scaling\\nof a logical cloud application on physical cloud resources. An SSMS, analogous to a\\nDBMS, provides three important abstractions for disaggregated applications: 1) a\\nlogical application model, similar to relational algebra, that describes application\\nsemantics but abstracts away the deployment details, 2) strong resilient programming\\nprimitives, similar to ACID transactions, that simplifies fault-tolerant programming\\nin the cloud, and 3) smart, cost-based optimization schemes that automates scheduling,\\nplacement, and other details, similar to a query optimizer. SSMS is an overarching\\nresearch direction that encapsulates several projects in cloud, distributed and\\nconcurrent systems. For more details, please check out each of the individual projects:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://dl.acm.org/doi/10.1145/3589262\",\n    target: \"_blank\"\n  }, \"Project Vision (CIDR 2024)\"), \"\\n|\\n\", React.createElement(Bibtex, {\n    withToggle: true\n  }, `@article{li24ssms,\nauthor = {Li, Tianyu and Chandramouli, Badrish and Burckhardt, Sebastian and Madden, Samuel},\n  title = {Serverless State Management Systems},\n  booktitle = {{CIDR} 2024, Conference on Innovative Data Systems Research},\n  year = {2024}`)), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://dl.acm.org/doi/10.1145/3589262\",\n    target: \"_blank\"\n  }, \"CReSt abstraction and DARQ system for resilient, composable cloud systems (SIGMOD 2023)\"), \"\\n|\\n\", React.createElement(Bibtex, {\n    withToggle: true\n  }, `@article{li23darq,\nauthor = {Li, Tianyu and Chandramouli, Badrish and Burckhardt, Sebastian and Madden, Samuel},\ntitle = {DARQ Matter Binds Everything: Performant and Composable Cloud Programming via Resilient Steps},\nyear = {2023},\nissue_date = {June 2023},\npublisher = {Association for Computing Machinery},\naddress = {New York, NY, USA},\nvolume = {1},\nnumber = {2},\nurl = {https://doi.org/10.1145/3589262},\ndoi = {10.1145/3589262},\njournal = {Proc. ACM Manag. Data},\nmonth = {jun},\narticleno = {117},\nnumpages = {27},\nkeywords = {service composition, cloud programming, distributed system, recoverability}}`)), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://dl.acm.org/doi/abs/10.1145/3533737.3535091\",\n    target: \"_blank\"\n  }, \" Epoch Protected Versions Schemes (DaMoN 2022)\"), \"\\n|\\n\", React.createElement(Bibtex, {\n    withToggle: true\n  }, `@inproceedings{li22performant,\nauthor = {Li, Tianyu and Chandramouli, Badrish and Madden, Samuel},\ntitle = {Performant Almost-Latch-Free Data Structures Using Epoch Protection},\nyear = {2022},\nisbn = {9781450393782},\npublisher = {Association for Computing Machinery},\naddress = {New York, NY, USA},\nurl = {https://doi.org/10.1145/3533737.3535091},\ndoi = {10.1145/3533737.3535091},\nbooktitle = {Proceedings of the 18th International Workshop on Data Management on New Hardware},\narticleno = {1},\nnumpages = {10},\nlocation = {Philadelphia, PA, USA},\nseries = {DaMoN '22}\n}`)), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://dl.acm.org/doi/abs/10.1145/3448016.3458454\",\n    target: \"_blank\"\n  }, \"Asynchronous Prefix Recoverability for Fast Distributed Stores (SIGMOD 2021)\"), \"\\n|\\n\", React.createElement(Bibtex, {\n    withToggle: true\n  }, `@inproceedings{10.1145/3448016.3458454,\nauthor = {Li, Tianyu and Chandramouli, Badrish and Faleiro, Jose M. and Madden, Samuel and Kossmann, Donald},\ntitle = {Asynchronous Prefix Recoverability for Fast Distributed Stores},\nyear = {2021},\nisbn = {9781450383431},\npublisher = {Association for Computing Machinery},\naddress = {New York, NY, USA},\nurl = {https://doi.org/10.1145/3448016.3458454},\ndoi = {10.1145/3448016.3458454},\npages = {1090â€“1102},\nnumpages = {13},\nkeywords = {key-value store, failure recovery, distributed system},\nlocation = {Virtual Event, China},\nseries = {SIGMOD '21}\n}`)), \"\\n\", React.createElement(_components.h3, null, \"Project Participants\"), \"\\n\", React.createElement(_components.p, null, \"Tianyu Li, Samuel Madden, Badrish Chandramouli (Microsoft Research), Sebastian Burckhardt (Microsoft Research)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/Tianyu/Desktop/MIT/dsg-public/src/markdowns/projects/ssms.mdx\";\nimport React from 'react';\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport BackgroundImage from 'gatsby-background-image';\nimport {getImage} from 'gatsby-plugin-image';\nimport {convertToBgImage} from 'gbimage-bridge';\nimport s from 'styled-components';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {LIBRE_BOLD} from '../utils/font';\nimport {Wrapper} from '../components/shared';\nconst ProjectTitle = (s.h2)`\n  ${LIBRE_BOLD}\n  color: white;\n  padding-left: 1rem;\n`;\nconst StyledBg = (s(BackgroundImage))`\n  &::before, &::after {\n    filter: brightness(40%);\n  }\n  display: flex;\n  align-items: center;\n`;\nconst ProjectTemplate = ({data, children}) => {\n  const {mdx: {frontmatter: {image, title}}} = data;\n  const bgImage = convertToBgImage(getImage(image));\n  return React.createElement(Layout, null, React.createElement(StyledBg, Object.assign({\n    Tag: \"div\"\n  }, bgImage, {\n    style: {\n      'height': '400px'\n    },\n    className: \"align-middle\",\n    backgroundColor: \"#ebeef2\"\n  }), React.createElement(ProjectTitle, null, title)), React.createElement(Wrapper, null, React.createElement(MDXProvider, null, children)));\n};\nexport const Head = () => React.createElement(Seo, {\n  title: \"Project\"\n});\nexport const query = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, quality: 100, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n  }\n`;\nProjectTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useState } from \"react\"\n\n\nconst BibtexInner = ({children, handleCopyClick}) => (\n  <div\n    className=\"bibtex\"\n    style={{\n      position: \"relative\",\n      backgroundColor: \"#f5f5f5\",\n      padding: \"15px\",\n      borderRadius: \"3px\",\n      margin: \"15px 0\"\n    }}\n  >\n    <pre style={{margin: 0, fontSize: \"0.9em\"}}>\n      {children}\n    </pre>\n    <button\n      className=\"bibtex-copy\"\n      onClick={handleCopyClick}\n      style={{\n        position: \"absolute\",\n        top: \"10px\",\n        right: \"10px\",\n        cursor: \"pointer\",\n        backgroundColor: \"#aaa\",\n        color: \"#fff\",\n        border: \"0\",\n        borderRadius: \"3px\",\n        padding: \"5px\",\n        outline: \"none\",\n        fontSize: \"0.8em\",\n        fontFamily: \"sans-serif\",\n      }}\n    >\n      Copy\n    </button>\n  </div>\n)\n\n\nconst Bibtex = ({children, withToggle}) => {\n  const [visible, setVisible] = useState(false);\n\n  const handleToggle = (event) => {\n    setVisible(!visible)\n    event.preventDefault()\n  }\n\n  const handleCopyClick = () => {\n    navigator.clipboard.writeText(children)\n  }\n\n  if (withToggle) {\n    if (!visible) {\n      return (\n        <>\n          <a href=\"#\" onClick={handleToggle}>View BibTeX</a>\n        </>\n      )\n    } else {\n        return (\n          <>\n            <a href=\"#\" onClick={handleToggle}>Hide BibTeX</a>\n            <BibtexInner handleCopyClick={handleCopyClick}>{children}</BibtexInner>\n          </>\n        )\n    }\n  } else {\n    return <BibtexInner handleCopyClick={handleCopyClick}>{children}</BibtexInner>\n  }\n}\n\nexport default Bibtex\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h3","_provideComponents","components","React","href","target","Bibtex","withToggle","wrapper","MDXLayout","ProjectTitle","s","h2","withConfig","displayName","componentId","LIBRE_BOLD","StyledBg","BackgroundImage","ProjectTemplate","_ref","data","children","mdx","frontmatter","image","title","bgImage","convertToBgImage","getImage","Layout","Tag","style","className","backgroundColor","Wrapper","MDXProvider","Head","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","BibtexInner","handleCopyClick","position","padding","borderRadius","margin","fontSize","onClick","top","right","cursor","color","border","outline","fontFamily","_ref2","visible","setVisible","useState","handleToggle","event","preventDefault","navigator","clipboard","writeText"],"sourceRoot":""}