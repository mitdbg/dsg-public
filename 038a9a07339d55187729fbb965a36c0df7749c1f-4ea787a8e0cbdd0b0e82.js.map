{"version":3,"file":"038a9a07339d55187729fbb965a36c0df7749c1f-4ea787a8e0cbdd0b0e82.js","mappings":"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","sources":["webpack:///./src/utils/font.js","webpack:///./node_modules/core-js/internals/to-string.js","webpack:///./src/components/shared.js","webpack:///./node_modules/core-js/internals/to-string-tag-support.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///../src/image-utils.ts","webpack:///../src/components/hooks.ts","webpack:///../src/components/layout-wrapper.tsx","webpack:///../src/components/picture.tsx","webpack:///../src/components/placeholder.tsx","webpack:///../src/components/main-image.tsx","webpack:///../src/components/gatsby-image.server.tsx","webpack:///../src/components/gatsby-image.browser.tsx","webpack:///../src/components/static-image.server.tsx","webpack:///../src/components/static-image.tsx","webpack:///./node_modules/camelcase/index.js","webpack:///./node_modules/core-js/internals/environment-webkit-version.js","webpack:///./node_modules/core-js/internals/environment-ff-version.js","webpack:///./node_modules/core-js/internals/environment-is-ie-or-edge.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/core-js/internals/delete-property-or-throw.js","webpack:///./src/components/header.js","webpack:///./src/components/navbar.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/internals/array-slice.js"],"sourcesContent":["export const GEORGIA_REGULAR = `font-family: 'Georgia', serif;`\n\nexport const LIBRE_BOLD = `\n  font-family: 'Libre Franklin', sans-serif;\n  font-weight: 700;\n`\n\nexport const LIBRE_BLACK = `\n  font-family: 'Libre Franklin', sans-serif;\n  font-weight: 900;\n`","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","import s from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport { GEORGIA_REGULAR, LIBRE_BLACK, LIBRE_BOLD } from '../utils/font'\n\nexport const Title = s.div`\n  ${({ noBorder }) => noBorder ? '': 'border-left: 12px solid #D12D4A;'}\n  padding: 0rem 1rem;\n  text-align: left;\n  font-size: 30px;\n  ${LIBRE_BLACK}\n  letter-spacing: 0px;\n  color: #283033;\n  opacity: 1;\n`\n\nexport const Wrapper = s.div`\n  ${({ font = GEORGIA_REGULAR }) => font}\n  padding: 4rem 10rem;\n  padding-bottom: 1rem;\n  text-align: left;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n  }\n`\n\nexport const StyledAnchor = s.a`\n  color: #000000 !important;\n  text-decoration: none !important;\n`\n\nexport const StyledLink = s(Link)`\n  color: #000000 !important;\n  text-decoration: none !important;\n`\n\nconst WHITE = '#FFFFFF'\nexport const CardWrapper = s.div`\n  background-color: ${WHITE};\n  border-radius: 24px;\n  box-shadow: 0px 0px 15px rgba(0,0,0,0.06);\n  padding: 1rem 1rem;\n  margin-top: 2rem;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: 1rem;\n  :hover {\n    transform: scale(1.01);\n  }\n  transition: all 0.3s;\n  overflow: hidden;\n  @media screen and (max-width: 768px) {\n    padding: 2rem 0;\n    margin: 1rem 0.5rem;\n  }\n`\n\nexport const NoLinkTitle = s.h6`\n  ${LIBRE_BOLD}\n  color: #464242;\n`\n\nexport const LinkTitle = s.h6`\n  ${LIBRE_BOLD}\n  color: #464242;\n  transition: 0.3s;\n  :hover {\n    color: #B5B4B4;\n    transition: 0.3s;\n  }\n`","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","'use strict';\nvar userAgent = require('../internals/environment-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","'use strict';\nvar userAgent = require('../internals/environment-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","'use strict';\nvar UA = require('../internals/environment-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n","'use strict';\nvar arraySlice = require('../internals/array-slice');\n\nvar floor = Math.floor;\n\nvar sort = function (array, comparefn) {\n  var length = array.length;\n\n  if (length < 8) {\n    // insertion sort\n    var i = 1;\n    var element, j;\n\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n  } else {\n    // merge sort\n    var middle = floor(length / 2);\n    var left = sort(arraySlice(array, 0, middle), comparefn);\n    var right = sort(arraySlice(array, middle), comparefn);\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = (lindex < llength && rindex < rlength)\n        ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n        : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n  }\n\n  return array;\n};\n\nmodule.exports = sort;\n","'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw new $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `left`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <img\n      alt=\"Gatsby logo\"\n      height={20}\n      style={{ margin: 0 }}\n      src=\"data:image/svg+xml,%3Csvg fill='none' viewBox='0 0 107 28' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3CclipPath id='a'%3E%3Cpath d='m0 0h106.1v28h-106.1z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cg fill='%23000'%3E%3Cpath clip-rule='evenodd' d='m89 11.7c-.8 0-2.2.2-3.2 1.6v-8.10005h-2.8v16.80005h2.7v-1.3c1.1 1.5 2.6 1.5999 3.2 1.5999 3 0 5-2.2999 5-5.2999s-2-5.3-4.9-5.3zm-.7 2.5c1.7 0 2.8 1.2 2.8 2.8s-1.2 2.8-2.8 2.8c-1.7 0-2.8-1.2-2.8-2.8s1.1-2.8 2.8-2.8z' fill-rule='evenodd'/%3E%3Cpath d='m71.2 21.9999v-7.6h1.9v-2.4h-1.9v-3.40005h-2.8v3.40005h-1.1v2.4h1.1v7.6z'/%3E%3Cpath clip-rule='evenodd' d='m65.6999 12h-2.9v1.3c-.8999-1.5-2.4-1.6-3.2-1.6-2.9 0-4.8999 2.4-4.8999 5.3s1.9999 5.2999 5.0999 5.2999c.8 0 2.1001-.0999 3.1001-1.5999v1.3h2.7999zm-5.1999 7.8c-1.7001 0-2.8-1.2-2.8-2.8s1.2-2.8 2.8-2.8c1.7 0 2.7999 1.2 2.7999 2.8s-1.1999 2.8-2.7999 2.8z' fill-rule='evenodd'/%3E%3Cpath d='m79.7001 14.4c-.7-.6-1.3-.7-1.6-.7-.7 0-1.1.3-1.1.8 0 .3.1.6.9.9l.7.2c.1261.0472.2621.0945.4037.1437.7571.2632 1.6751.5823 2.0963 1.2563.3.4.5 1 .5 1.7 0 .9-.3 1.8-1.1 2.5s-1.8 1.0999-3 1.0999c-2.1 0-3.2-.9999-3.9-1.6999l1.5-1.7c.6.6 1.4 1.2 2.2 1.2s1.4-.4 1.4-1.1c0-.6-.5-.9-.9-1l-.6-.2c-.0687-.0295-.1384-.0589-.2087-.0887l-.0011-.0004c-.6458-.2729-1.3496-.5704-1.8902-1.1109-.5-.5-.8-1.1-.8-1.9 0-1 .5-1.8 1-2.3.8-.6 1.8-.7 2.6-.7.7 0 1.9.1 3.2 1.1z'/%3E%3Cpath d='m98.5 20.5-4.8-8.5h3.3l3.1 5.7 2.8-5.7h3.2l-8 15.3h-3.2z'/%3E%3Cpath d='m47 13.7h7c0 .0634.01.1267.0206.1932.0227.1435.0477.3018-.0206.5068 0 4.5-3.4 8.1-8 8.1s-8-3.6-8-8.1c0-4.49995 3.6-8.09995 8-8.09995 2.6 0 5 1.2 6.5 3.3l-2.3 1.49995c-1-1.29995-2.6-2.09995-4.2-2.09995-2.9 0-4.9 2.49995-4.9 5.39995s2.1 5.3 5 5.3c2.6 0 4-1.3 4.6-3.2h-3.7z'/%3E%3C/g%3E%3Cpath d='m18 14h7c0 5.2-3.7 9.6-8.5 10.8l-13.19995-13.2c1.1-4.9 5.5-8.6 10.69995-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.29995 2.5-8.49995 6l11.49995 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8z' fill='%23fff'/%3E%3Cpath d='m6.2 21.7001c-2.1-2.1-3.2-4.8-3.2-7.6l10.8 10.8c-2.7 0-5.5-1.1-7.6-3.2z' fill='%23fff'/%3E%3Cpath d='m14 0c-7.7 0-14 6.3-14 14s6.3 14 14 14 14-6.3 14-14-6.3-14-14-14zm-7.8 21.8c-2.1-2.1-3.2-4.9-3.2-7.6l10.9 10.8c-2.8-.1-5.6-1.1-7.7-3.2zm10.2 2.9-13.1-13.1c1.1-4.9 5.5-8.6 10.7-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.2 2.5-8.5 6l11.5 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8v-2h7c0 5.2-3.7 9.6-8.6 10.7z' fill='%237026b9'/%3E%3C/g%3E%3C/svg%3E\"\n    />\n  </header>\n)\n\nexport default Header\n","import React from 'react'\nimport s from 'styled-components'\nimport { Link } from 'gatsby'\nimport { StyledLink } from './shared'\n\nconst NavText = s.text`\n  font-size: 110%;\n  font-family: 'Libre Franklin', sans-serif;\n  color: #283033;\n  transition: 0.3s;\n  :hover {\n    color: #B5B4B4;\n    transition: 0.3s;\n  }\n`\n\nconst NavbarWrapper = s.nav`\n  z-index: 1;\n`\n\nconst Image = s.img`\n  max-height: 80px;\n  @media (max-width: 768px) {\n    max-height: 30px;\n  }\n`\n\nconst RightUL = s.ul`\n  margin-left: 1rem;\n  @media (max-width: 768px) {\n    margin-left: 0;\n  }\n`\n\nconst NavBar = ({ dsail }) => {\n  const imageSource = dsail ? '/images/dsail-logo.png': '/images/dsg-logo.png'\n\n  return (\n    <NavbarWrapper\n      className=\"navbar sticky-top navbar-expand-lg\"\n      style={{\n        fontFamily: 'Libre Franklin',\n        backgroundColor: '#FFFFFF',\n        boxShadow: '0px 5px 6px #00000029',\n        opacity: 1,\n        padding: '0 5rem'\n      }}\n    >\n      <div className=\"my-2 order-0 order-md-1 position-relative\" style={{ textAlign: 'center' }}>\n        <StyledLink to='/'>\n          <Image src={imageSource} className=\"img-fluid\" />\n        </StyledLink>\n        <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\".dual-collapse2\" aria-expanded=\"false\">\n          <span className=\"navbar-toggler-icon\"><img src=\"/images/menu.svg\" style={{ transform: 'translate(0, 0.2rem)' }} /></span>\n        </button>\n      </div>\n      <div className=\"navbar-collapse w-100 dual-collapse2 order-2 order-md-2 collapse\">\n        <RightUL className=\"navbar-nav ml-auto text-center\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/\"><NavText> Home </NavText></Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/projects\"><NavText> Projects </NavText></Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/people\"><NavText> People </NavText></Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/publications\"><NavText> Publications </NavText></Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dsail\"><NavText> DSAIL </NavText></Link>\n          </li>\n        </RightUL>\n      </div>\n    </NavbarWrapper>\n  )\n}\n\nexport default NavBar","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport s from 'styled-components'\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport NavBar from \"./navbar\"\n\nconst Footer = s.div`\n  margin-top: 2rem;\n  background-color: ${({ dsail }) => dsail ? 'rgba(177,0,28,0.8)' : 'rgba(233,210,73,1)'};\n  color: ${({ dsail }) => dsail ? '#FFFFFF' : '#000000'};\n  font-family: 'Roboto', sans-serif;\n  text-align: center;\n  padding: 1rem;\n  font-size: 80%;\n\n  a {\n    color: ${({ dsail }) => dsail ? '#FFFFFF' : '#000000'} !important;\n  }\n`\n\nconst Layout = ({ children, dsail=false }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata?.title || `Title`} /> */}\n      <NavBar dsail={dsail} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <Footer dsail={dsail}>\n          © {new Date().getFullYear()} &middot; Built with 💖 by DSG @ MIT.\n          {` `}\n          <a href=\"https://accessibility.mit.edu/\">Accessibility</a>.\n        </Footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/environment-ff-version');\nvar IE_OR_EDGE = require('../internals/environment-is-ie-or-edge');\nvar V8 = require('../internals/environment-v8-version');\nvar WEBKIT = require('../internals/environment-webkit-version');\n\nvar test = [];\nvar nativeSort = uncurryThis(test.sort);\nvar push = uncurryThis(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString(x) > toString(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = lengthOfArrayLike(items);\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql, Script } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            ogImage\n            ogTitle\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  const { ogImage, ogTitle } = site.siteMetadata\n\n  // JQuery must be loaded before Bootstrap.\n  // https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-script/#loading-scripts-dependently\n  const [loadedJQuery, setLoadedJQuery] = React.useState(false)\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={ogTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={ogImage}/>\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={ogTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta property=\"twitter:image\" content={ogImage}/>\n      <Script src=\"https://cdn.jsdelivr.net/npm/swiper@9/swiper-element-bundle.min.js\" />\n      <Script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\" onLoad={() => setLoadedJQuery(true)} />\n      <Script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\" integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\" crossorigin=\"anonymous\" />\n      {loadedJQuery && <Script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct\" crossorigin=\"anonymous\" />}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n"],"names":["GEORGIA_REGULAR","LIBRE_BOLD","LIBRE_BLACK","classof","$String","String","module","exports","argument","TypeError","Title","s","div","withConfig","displayName","componentId","_ref","noBorder","Wrapper","_ref2","font","StyledAnchor","a","StyledLink","Link","CardWrapper","NoLinkTitle","h6","LinkTitle","test","wellKnownSymbol","fails","METHOD_NAME","method","call","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","_","e","t","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","i","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","slice","preserveCamelCase","lastIndex","m1","charAt","identifier","postProcess","webkit","match","firefox","UA","arraySlice","floor","Math","sort","array","comparefn","element","j","middle","llength","rlength","lindex","rindex","tryToString","$TypeError","O","NavText","text","NavbarWrapper","nav","Image","img","RightUL","ul","dsail","imageSource","React","fontFamily","boxShadow","padding","textAlign","to","transform","Footer","_ref3","_ref4","useStaticQuery","NavBar","margin","Date","getFullYear","href","uncurryThis","aCallable","toObject","lengthOfArrayLike","deletePropertyOrThrow","toString","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","nativeSort","push","FAILS_ON_UNDEFINED","undefined","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","value","index","result","fromCharCode","target","proto","forced","this","itemsLength","items","arrayLength","getSortCompare","TO_STRING_TAG_SUPPORT","isCallable","classofRaw","TO_STRING_TAG","$Object","Object","CORRECT_ARGUMENTS","it","tag","error","tryGet","callee","_site$siteMetadata","_site$siteMetadata2","description","title","site","metaDescription","siteMetadata","defaultTitle","ogImage","ogTitle","loadedJQuery","setLoadedJQuery","name","content","property","author","Script","integrity","crossorigin"],"sourceRoot":""}