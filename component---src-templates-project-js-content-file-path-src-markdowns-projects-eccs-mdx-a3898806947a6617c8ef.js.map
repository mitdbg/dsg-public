{"version":3,"file":"component---src-templates-project-js-content-file-path-src-markdowns-projects-eccs-mdx-a3898806947a6617c8ef.js","mappings":"wLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,6CAA8C,KAAMK,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,+gCAAghC,KAAMI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBR,EAAYI,EAAG,KAAM,8FAC1zC,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,yFCDA,MAAMY,EAAgBC,EAAAA,QAAEP,GAAEQ,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAJH,CAAI,uCACtBI,EAAAA,IAIEC,GAAYL,EAAAA,EAAAA,SAAEM,EAAAA,GAAgBL,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAlBH,CAAkB,iFAO9BO,EAAkBC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAASF,EACvC,MAAOG,KAAMC,aAAa,MAACC,EAAK,MAAEC,KAAWL,EACvCM,GAAUC,EAAAA,EAAAA,KAAiBC,EAAAA,EAAAA,GAASJ,IAC1C,OAAOjB,EAAAA,cAAoBsB,EAAAA,EAAQ,KAAMtB,EAAAA,cAAoBS,EAAUhB,OAAOC,OAAO,CACnF6B,IAAK,OACJJ,EAAS,CACVK,MAAO,CACL,OAAU,SAEZC,UAAW,eACXC,gBAAiB,YACf1B,EAAAA,cAAoBG,EAAc,KAAMe,IAASlB,EAAAA,cAAoB2B,EAAAA,GAAS,KAAM3B,EAAAA,cAAoB4B,EAAAA,GAAa,KAAMd,IAAW,EAE/He,EAAOA,IAAM7B,EAAAA,cAAoB8B,EAAAA,EAAK,CACjDZ,MAAO,YAiBM,SAASa,EAAiBxC,GACvC,OAAOS,EAAAA,cAAoBW,EAAiBpB,EAAOS,EAAAA,cAAoBgC,EAAqBzC,GAC9F,C","sources":["webpack:///./src/markdowns/projects/eccs.mdx","webpack:///./src/templates/project.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"ECCS: Exposing Critical Causal Structures\"), \"\\n\", React.createElement(_components.p, null, \"For data systems that support causal queries, high quality causal models are essential to more reliable query results.\\nThe golden standard for establishing causal models for scientific domain data is carefully designed experiments, often relying\\non interventions in a laboratory setting. However, interventional experiments can often be not plausible while building a causal model\\nfor custom domain data. Therefore, people rely on extracting models from observational data. Standard statistical causal discovery\\nalgorithms often do not scale to accomodate the number of variables and the volume of data in custom scenarios. Most causal discovery\\nalgorithms also cater to downstream tasks with more indirect measures of accuracy. In this project, we are interested in developing a\\nframework for interactively refine a causal model for such custom domain data systems. The framework aims to efficiently use its\\ninteractivity budget to minimize biases in given Average Treatment Effect (ATE) queries that the user is interested in.\"), \"\\n\", React.createElement(_components.h2, null, \"Participants\"), \"\\n\", React.createElement(_components.p, null, \"Sylvia Zhang, Markos Markakis, Rana Shahout, Chunwei Liu, Ibrahim Sabek, Michael Cafarella\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/sylviaziyuzhang/Desktop/DSG related/dsg-public/src/markdowns/projects/eccs.mdx\";\nimport React from 'react';\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport BackgroundImage from 'gatsby-background-image';\nimport {getImage} from 'gatsby-plugin-image';\nimport {convertToBgImage} from 'gbimage-bridge';\nimport s from 'styled-components';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {LIBRE_BOLD} from '../utils/font';\nimport {Wrapper} from '../components/shared';\nconst ProjectTitle = (s.h2)`\n  ${LIBRE_BOLD}\n  color: white;\n  padding-left: 1rem;\n`;\nconst StyledBg = (s(BackgroundImage))`\n  &::before, &::after {\n    filter: brightness(40%);\n  }\n  display: flex;\n  align-items: center;\n`;\nconst ProjectTemplate = ({data, children}) => {\n  const {mdx: {frontmatter: {image, title}}} = data;\n  const bgImage = convertToBgImage(getImage(image));\n  return React.createElement(Layout, null, React.createElement(StyledBg, Object.assign({\n    Tag: \"div\"\n  }, bgImage, {\n    style: {\n      'height': '400px'\n    },\n    className: \"align-middle\",\n    backgroundColor: \"#ebeef2\"\n  }), React.createElement(ProjectTitle, null, title)), React.createElement(Wrapper, null, React.createElement(MDXProvider, null, children)));\n};\nexport const Head = () => React.createElement(Seo, {\n  title: \"Project\"\n});\nexport const query = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, quality: 100, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n  }\n`;\nProjectTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","_provideComponents","components","React","wrapper","MDXLayout","ProjectTitle","s","withConfig","displayName","componentId","LIBRE_BOLD","StyledBg","BackgroundImage","ProjectTemplate","_ref","data","children","mdx","frontmatter","image","title","bgImage","convertToBgImage","getImage","Layout","Tag","style","className","backgroundColor","Wrapper","MDXProvider","Head","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}