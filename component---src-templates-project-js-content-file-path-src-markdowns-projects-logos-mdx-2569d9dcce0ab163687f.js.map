{"version":3,"file":"component---src-templates-project-js-content-file-path-src-markdowns-projects-logos-mdx-2569d9dcce0ab163687f.js","mappings":"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","sources":["webpack:///./src/components/bibtex.js","webpack:///./src/markdowns/projects/logos.mdx","webpack:///./src/templates/project.js"],"sourcesContent":["import React, { useState } from \"react\"\n\n\nconst BibtexInner = ({children, handleCopyClick}) => (\n  <div\n    className=\"bibtex\"\n    style={{\n      position: \"relative\",\n      backgroundColor: \"#f5f5f5\",\n      padding: \"15px\",\n      borderRadius: \"3px\",\n      margin: \"15px 0\"\n    }}\n  >\n    <pre style={{margin: 0, fontSize: \"0.9em\"}}>\n      {children}\n    </pre>\n    <button\n      className=\"bibtex-copy\"\n      onClick={handleCopyClick}\n      style={{\n        position: \"absolute\",\n        top: \"10px\",\n        right: \"10px\",\n        cursor: \"pointer\",\n        backgroundColor: \"#aaa\",\n        color: \"#fff\",\n        border: \"0\",\n        borderRadius: \"3px\",\n        padding: \"5px\",\n        outline: \"none\",\n        fontSize: \"0.8em\",\n        fontFamily: \"sans-serif\",\n      }}\n    >\n      Copy\n    </button>\n  </div>\n)\n\n\nconst Bibtex = ({children, withToggle}) => {\n  const [visible, setVisible] = useState(false);\n\n  const handleToggle = (event) => {\n    setVisible(!visible)\n    event.preventDefault()\n  }\n\n  const handleCopyClick = () => {\n    navigator.clipboard.writeText(children)\n  }\n\n  if (withToggle) {\n    if (!visible) {\n      return (\n        <>\n          <a href=\"#\" onClick={handleToggle}>View BibTeX</a>\n        </>\n      )\n    } else {\n        return (\n          <>\n            <a href=\"#\" onClick={handleToggle}>Hide BibTeX</a>\n            <BibtexInner handleCopyClick={handleCopyClick}>{children}</BibtexInner>\n          </>\n        )\n    }\n  } else {\n    return <BibtexInner handleCopyClick={handleCopyClick}>{children}</BibtexInner>\n  }\n}\n\nexport default Bibtex\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Bibtex from '../../components/bibtex.js';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"LOGos: From Logs to Causal Diagnosis of Large Systems\"), \"\\n\", React.createElement(_components.p, null, \"Causal inference can quantify cause-effect relationships in domains as varied as\\nmedicine, economics and public policy. Production computer systems exhibit a\\nsimilar level of complexity, together with a recurring time-sensitive need to\\ndiagnose unwanted phenomena. However, such systems are often only observed\\nimperfectly and indirectly, through long, messy, semi-structured logs. In this work,\\nwe want to accelerate large systems debugging by applying causal inference over logs.\\nThis will let engineers leverage logs to diagnose problems and assess interventions\\nin a principled manner. Our proposed framework achieves this through two\\nhuman-in-the-loop modules: (1) The Candidate Cause Ranker, through which engineers\\ncan determine the causes of a problem without running a full causal discovery algorithm,\\ninforming possible interventions; and (2) the Interactive Causal Graph Refiner, which\\nhelps engineers compute an unbiased estimation of the effect of their discovered causes\\nwithout extensive manual causal graph verification. Both modules are powered by the\\ninsight that only part of the causal graph of the system is needed to correctly quantify\\nan effect of interest. We also provide a data preparation pipeline, the Log Converter,\\nwhich transforms raw, messy, real-world logs into an appropriate tabular input for causal\\ninference, using methods drawn from data transformation, cleaning, and extraction.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://doi.org/10.1145/3626246.3654731\",\n    target: \"_blank\"\n  }, \"Read the Demo Paper (SIGMOD 2024)\"), \"\\n|\\n\", React.createElement(Bibtex, {\n    withToggle: true\n  }, `@inproceedings{markakis2024sawmill,\nauthor = {Markakis, Markos and Chen, An Bo and Youngmann, Brit and Gao, Trinity and Zhang, Ziyu \nand Shahout, Rana and Chen, Peter Baile and Liu, Chunwei and Sabek, Ibrahim and Cafarella, Michael},\ntitle = {Sawmill: From Logs to Causal Diagnosis of Large Systems},\nyear = {2024},\nisbn = {9798400704222},\npublisher = {Association for Computing Machinery},\naddress = {New York, NY, USA},\nurl = {https://doi.org/10.1145/3626246.3654731},\ndoi = {10.1145/3626246.3654731},\nbooktitle = {Companion of the 2024 International Conference on Management of Data},\npages = {444–447},\nnumpages = {4},\nkeywords = {causal discovery, causality, fault diagnosis, llms, logs},\nlocation = {Santiago AA, Chile},\nseries = {SIGMOD/PODS '24}\n}`)), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://doi.org/10.14778/3705829.3705836\",\n    target: \"_blank\"\n  }, \"Read the Full Paper (VLDB 2025)\"), \"\\n|\\n\", React.createElement(Bibtex, {\n    withToggle: true\n  }, `@article{markakis2025from,\nauthor = {Markakis, Markos and Youngmann, Brit and Gao, Trinity and Zhang, Ziyu and Shahout, Rana and Chen, Peter Baile and Liu, Chunwei and Sabek, Ibrahim and Cafarella, Michael},\ntitle = {From Logs to Causal Inference: Diagnosing Large Systems},\nyear = {2025},\nissue_date = {October 2024},\npublisher = {VLDB Endowment},\nvolume = {18},\nnumber = {2},\nissn = {2150-8097},\nurl = {https://doi.org/10.14778/3705829.3705836},\ndoi = {10.14778/3705829.3705836},\njournal = {Proc. VLDB Endow.},\nmonth = feb,\npages = {158–172},\nnumpages = {15}\n}`)), \"\\n\", React.createElement(_components.h2, null, \"Project Participants\"), \"\\n\", React.createElement(_components.p, null, \"Markos Markakis, Brit Youngmann, Trinity Gao, Sylvia Zhang, Rana Shahout, Peter Chen, Chunwei Liu, Ibrahim Sabek, Michael Cafarella\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/guzhuohan/MIT/DSG/dsg-public/src/markdowns/projects/logos.mdx\";\nimport React from 'react';\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport BackgroundImage from 'gatsby-background-image';\nimport {getImage} from 'gatsby-plugin-image';\nimport {convertToBgImage} from 'gbimage-bridge';\nimport s from 'styled-components';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {LIBRE_BOLD} from '../utils/font';\nimport {Wrapper} from '../components/shared';\nconst ProjectTitle = (s.h2)`\n  ${LIBRE_BOLD}\n  color: white;\n  padding-left: 1rem;\n`;\nconst StyledBg = (s(BackgroundImage))`\n  &::before, &::after {\n    filter: brightness(40%);\n  }\n  display: flex;\n  align-items: center;\n`;\nconst ProjectTemplate = ({data, children}) => {\n  const {mdx: {frontmatter: {image, title}}} = data;\n  const bgImage = convertToBgImage(getImage(image));\n  return React.createElement(Layout, null, React.createElement(StyledBg, Object.assign({\n    Tag: \"div\"\n  }, bgImage, {\n    style: {\n      'height': '400px'\n    },\n    className: \"align-middle\",\n    backgroundColor: \"#ebeef2\"\n  }), React.createElement(ProjectTitle, null, title)), React.createElement(Wrapper, null, React.createElement(MDXProvider, null, children)));\n};\nexport const Head = () => React.createElement(Seo, {\n  title: \"Project\"\n});\nexport const query = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, quality: 100, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n  }\n`;\nProjectTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["BibtexInner","_ref","children","handleCopyClick","React","className","style","position","backgroundColor","padding","borderRadius","margin","fontSize","onClick","top","right","cursor","color","border","outline","fontFamily","_ref2","withToggle","visible","setVisible","useState","handleToggle","event","preventDefault","navigator","clipboard","writeText","href","_createMdxContent","props","_components","Object","assign","h1","p","h2","_provideComponents","components","target","Bibtex","wrapper","MDXLayout","ProjectTitle","s","withConfig","displayName","componentId","LIBRE_BOLD","StyledBg","BackgroundImage","ProjectTemplate","data","mdx","frontmatter","image","title","bgImage","convertToBgImage","getImage","Layout","Tag","Wrapper","MDXProvider","Head","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}