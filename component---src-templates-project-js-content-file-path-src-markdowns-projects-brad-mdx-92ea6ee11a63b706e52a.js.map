{"version":3,"file":"component---src-templates-project-js-content-file-path-src-markdowns-projects-brad-mdx-92ea6ee11a63b706e52a.js","mappings":"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","sources":["webpack:///./src/utils/random_order.js","webpack:///./src/markdowns/projects/brad.mdx","webpack:///./src/templates/project.js","webpack:///./src/components/bibtex.js"],"sourcesContent":["import React from \"react\"\r\n\r\nfunction shuffle(items) {\r\n  const shuffled = [...items]\r\n  for (let i = shuffled.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1))\r\n    const temp = shuffled[i];\r\n    shuffled[i] = shuffled[j];\r\n    shuffled[j] = temp;\r\n  }\r\n  return shuffled\r\n};\r\n\r\nconst RandomOrder = ({items}) => {\r\n  const ordering = shuffle(items);\r\n  return (<>{ordering.join(\", \")}</>)\r\n}\r\n\r\nexport default RandomOrder;\r\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport Bibtex from '../../components/bibtex.js';\nimport RandomOrder from '../../utils/random_order.js';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"BRAD: Simplifying Cloud Data Processing with Learned Automated Data Meshes\"), \"\\n\", React.createElement(_components.p, null, \"The last decade of database research has led to the prevalence of specialized\\r\\nsystems for different workloads. Consequently, organizations often rely on a\\r\\ncombination of specialized systems, organized in a Data Mesh. Data meshes\\r\\npresent significant challenges for system administrators, including picking the\\r\\nright system for each workload, moving data between systems, maintaining\\r\\nconsistency, and correctly configuring each system. Many non-expert end users\\r\\n(e.g., data analysts or app developers) either cannot solve their business\\r\\nproblems, or suffer from sub-optimal performance or cost due to this complexity.\\r\\nWe envision BRAD, a cloud system that automatically integrates and manages data\\r\\nand systems into an instance-optimized data mesh, allowing users to efficiently\\r\\nstore and query data under a unified data model (i.e., relational tables)\\r\\nwithout knowledge of underlying system details. With machine learning, BRAD\\r\\nautomatically deduces the strengths and weaknesses of each engine through a\\r\\ncombination of offline training and online probing. Then, BRAD uses these\\r\\ninsights to route queries to the most suitable (combination of) system(s) for\\r\\nefficient execution. Furthermore, BRAD automates configuration tuning, resource\\r\\nscaling, and data migration across component systems, and makes recommendations\\r\\nfor more impactful decisions, such as adding or removing systems. As such, BRAD\\r\\nexemplifies a new class of systems that utilize machine learning and the cloud\\r\\nto make complex data processing more accessible to end users, raising numerous\\r\\nnew problems in database systems, machine learning, and the cloud.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(\"a\", {\n    href: \"https://doi.org/10.14778/3611479.3611526\",\n    target: \"_blank\"\n  }, \"Read the Vision Paper (VLDB 2023)\"), \"\\r\\n|\\r\\n\", React.createElement(Bibtex, {\n    withToggle: true\n  }, `@article{brad-kraska23,\n  author = {Kraska, Tim and Li, Tianyu and Madden, Samuel and Markakis, Markos\n    and Ngom, Amadou and Wu, Ziniu and Yu, Geoffrey X.},\n  doi = {10.14778/3611479.3611526},\n  journal = {{Proceedings of the VLDB Endowment}},\n  month = {8},\n  number = {11},\n  pages = {3293--3301},\n  title = {{Check Out the Big Brain on BRAD: Simplifying Cloud Data Processing\n    with Learned Automated Data Meshes}},\n  volume = {16},\n  year = {2023},\n}`)), \"\\n\", React.createElement(_components.h3, null, \"Project Participants\"), \"\\n\", React.createElement(\"p\", null, React.createElement(RandomOrder, {\n    items: [\"Ferdinand Kossmann\", \"Tim Kraska\", \"Tianyu Li\", \"Samuel Madden\", \"Markos Markakis\", \"Amadou Ngom\", \"Ziniu Wu\", \"Geoffrey Yu\"]\n  })), \"\\n\", React.createElement(\"p\", null, \"(Participant order is randomized.)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Everything/Github/dsg-public/src/markdowns/projects/brad.mdx\";\nimport React from 'react';\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport BackgroundImage from 'gatsby-background-image';\nimport {getImage} from 'gatsby-plugin-image';\nimport {convertToBgImage} from 'gbimage-bridge';\nimport s from 'styled-components';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {LIBRE_BOLD} from '../utils/font';\nimport {Wrapper} from '../components/shared';\nconst ProjectTitle = (s.h2)`\n  ${LIBRE_BOLD}\n  color: white;\n  padding-left: 1rem;\n`;\nconst StyledBg = (s(BackgroundImage))`\n  &::before, &::after {\n    filter: brightness(40%);\n  }\n  display: flex;\n  align-items: center;\n`;\nconst ProjectTemplate = ({data, children}) => {\n  const {mdx: {frontmatter: {image, title}}} = data;\n  const bgImage = convertToBgImage(getImage(image));\n  return React.createElement(Layout, null, React.createElement(StyledBg, Object.assign({\n    Tag: \"div\"\n  }, bgImage, {\n    style: {\n      'height': '400px'\n    },\n    className: \"align-middle\",\n    backgroundColor: \"#ebeef2\"\n  }), React.createElement(ProjectTitle, null, title)), React.createElement(Wrapper, null, React.createElement(MDXProvider, null, children)));\n};\nexport const Head = () => React.createElement(Seo, {\n  title: \"Project\"\n});\nexport const query = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, quality: 100, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n      }\n    }\n  }\n`;\nProjectTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useState } from \"react\"\r\n\r\n\r\nconst BibtexInner = ({children, handleCopyClick}) => (\r\n  <div\r\n    className=\"bibtex\"\r\n    style={{\r\n      position: \"relative\",\r\n      backgroundColor: \"#f5f5f5\",\r\n      padding: \"15px\",\r\n      borderRadius: \"3px\",\r\n      margin: \"15px 0\"\r\n    }}\r\n  >\r\n    <pre style={{margin: 0, fontSize: \"0.9em\"}}>\r\n      {children}\r\n    </pre>\r\n    <button\r\n      className=\"bibtex-copy\"\r\n      onClick={handleCopyClick}\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"10px\",\r\n        right: \"10px\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#aaa\",\r\n        color: \"#fff\",\r\n        border: \"0\",\r\n        borderRadius: \"3px\",\r\n        padding: \"5px\",\r\n        outline: \"none\",\r\n        fontSize: \"0.8em\",\r\n        fontFamily: \"sans-serif\",\r\n      }}\r\n    >\r\n      Copy\r\n    </button>\r\n  </div>\r\n)\r\n\r\n\r\nconst Bibtex = ({children, withToggle}) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleToggle = (event) => {\r\n    setVisible(!visible)\r\n    event.preventDefault()\r\n  }\r\n\r\n  const handleCopyClick = () => {\r\n    navigator.clipboard.writeText(children)\r\n  }\r\n\r\n  if (withToggle) {\r\n    if (!visible) {\r\n      return (\r\n        <>\r\n          <a href=\"#\" onClick={handleToggle}>View BibTeX</a>\r\n        </>\r\n      )\r\n    } else {\r\n        return (\r\n          <>\r\n            <a href=\"#\" onClick={handleToggle}>Hide BibTeX</a>\r\n            <BibtexInner handleCopyClick={handleCopyClick}>{children}</BibtexInner>\r\n          </>\r\n        )\r\n    }\r\n  } else {\r\n    return <BibtexInner handleCopyClick={handleCopyClick}>{children}</BibtexInner>\r\n  }\r\n}\r\n\r\nexport default Bibtex\r\n"],"names":["_ref","items","ordering","shuffled","_toConsumableArray","i","length","j","Math","floor","random","temp","shuffle","React","join","_createMdxContent","props","_components","Object","assign","h1","p","h3","_provideComponents","components","href","target","Bibtex","withToggle","RandomOrder","wrapper","MDXLayout","ProjectTitle","s","h2","withConfig","displayName","componentId","LIBRE_BOLD","StyledBg","BackgroundImage","ProjectTemplate","data","children","mdx","frontmatter","image","title","bgImage","convertToBgImage","getImage","Layout","Tag","style","className","backgroundColor","Wrapper","MDXProvider","Head","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","BibtexInner","handleCopyClick","position","padding","borderRadius","margin","fontSize","onClick","top","right","cursor","color","border","outline","fontFamily","_ref2","visible","setVisible","useState","handleToggle","event","preventDefault","navigator","clipboard","writeText"],"sourceRoot":""}